// <auto-generated />
using System;
using ICS_Project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS_Project.DAL.Migrations
{
    [DbContext(typeof(MediaPlayerDbContext))]
    [Migration("20250228114515_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("ICS_Project.DAL.Entities.MultimediaFile", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("MultimediaFiles");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.Playlist", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.TimeAdded", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MultimediaFileid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MultimediaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlaylistId")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("MultimediaFileid");

                    b.HasIndex("PlaylistId");

                    b.ToTable("TimeAddeds");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.TimeAdded", b =>
                {
                    b.HasOne("ICS_Project.DAL.Entities.MultimediaFile", "MultimediaFile")
                        .WithMany()
                        .HasForeignKey("MultimediaFileid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ICS_Project.DAL.Entities.Playlist", "Playlist")
                        .WithMany("MultimediaFiles")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MultimediaFile");

                    b.Navigation("Playlist");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.Playlist", b =>
                {
                    b.Navigation("MultimediaFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
